generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Deliverable {
  id   String @id @default(cuid())
  name String @unique

  createdAt DateTime @default(now())

  Items     Item[]
  Statuses  Status[]
  followers User[]   @relation("UserDeliverableFollowers")
  creatorId String
  creator   User     @relation(fields: [creatorId], references: [id])
}

model Item {
  name          String
  id            String       @id @default(cuid())
  deliverable   Deliverable  @relation(fields: [deliverableId], references: [id])
  deliverableId String
  ItemStatuses  ItemStatus[]
}

model Status {
  id            String       @id @default(cuid())
  name          String
  deliverable   Deliverable  @relation(fields: [deliverableId], references: [id])
  deliverableId String
  ItemStatuses  ItemStatus[]
}

model ItemStatus {
  id       String @id @default(cuid())
  itemId   String
  statusId String
  item     Item   @relation(fields: [itemId], references: [id])
  status   Status @relation(fields: [statusId], references: [id])

  @@unique([itemId, statusId])
}

model User {
  id                  String        @id @default(cuid())
  name                String?
  email               String?       @unique
  emailVerified       DateTime?
  admin               Boolean       @default(false)
  image               String?
  username            String?       @unique
  accounts            Account[]
  sessions            Session[]
  followed            Deliverable[] @relation("UserDeliverableFollowers")
  createdDeliverables Deliverable[]
}
